[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tc1d"
version = "0.2.0"
authors = [
    {name = "Dave Whipp", email = "david.whipp@helsinki.fi"},
    {name="Benjamin GÃ©rard", email = "benjamin.gerard@helsinki.fi"},
    {name = "Sanni Laaksonen", email = "sanni.laaksonen@helsinki.fi"},
]
#maintainers = [
#    {name = "All the contributors"},
#]
description = "A 1D thermal model and thermochronometer age prediction code"
keywords = ["thermochronology", "heat transfer", "geology", "geophysics"]
readme = "README.md"
requires-python = ">=3.10.0"
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
]
dependencies = [
    "corner",
    "emcee",
    "matplotlib",
    "neighpy",
    "numpy",
    "scipy",
    "scikit-learn",
]

[project.urls]
homepage = "https://tc1d.readthedocs.io/"
repository = "https://github.com/HUGG/TC1D"
documentation = "https://tc1d.readthedocs.io/"

[project.scripts]
tc1d-cli = "tc1d.tc1d_cli:main"

[tool.ruff]
# Same as Black.
line-length = 88
indent-width = 4

target-version = "py312"  # Adjust to your Python version

[tool.ruff.lint]

# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]

# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.pydocstyle]
convention = "numpy"  # Accepts: "google", "numpy", or "pep257".
